// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App renders 1`] = `
<App>
  <Provider
    store={
      Object {
        "@@observable": [Function],
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <BrowserRouter>
      <Router
        location={
          Object {
            "hash": "",
            "key": "default",
            "pathname": "/",
            "search": "",
            "state": null,
          }
        }
        navigationType="POP"
        navigator={
          Object {
            "action": "POP",
            "back": [Function],
            "block": [Function],
            "createHref": [Function],
            "forward": [Function],
            "go": [Function],
            "listen": [Function],
            "location": Object {
              "hash": "",
              "key": "default",
              "pathname": "/",
              "search": "",
              "state": null,
            },
            "push": [Function],
            "replace": [Function],
          }
        }
      >
        <Suspense
          fallback={
            <div>
              Loading...
            </div>
          }
        >
          <Routes>
            <CartWrapper>
              <main
                className="cart-wrapper"
              >
                <div
                  aria-label="Continue Shopping"
                  className="cart-wrapper__back"
                  role="link"
                >
                  <div
                    className="cart-wrapper__back__link"
                  >
                    <ForwardRef(ArrowBackIosNewIcon)
                      fontSize="small"
                      style={
                        Object {
                          "color": "grey",
                        }
                      }
                    >
                      <ForwardRef(SvgIcon)
                        data-testid="ArrowBackIosNewIcon"
                        fontSize="small"
                        style={
                          Object {
                            "color": "grey",
                          }
                        }
                      >
                        <MuiSvgIconRoot
                          aria-hidden={true}
                          as="svg"
                          className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                          data-testid="ArrowBackIosNewIcon"
                          focusable="false"
                          ownerState={
                            Object {
                              "children": <path
                                d="M17.77 3.77 16 2 6 12l10 10 1.77-1.77L9.54 12z"
                              />,
                              "color": "inherit",
                              "component": "svg",
                              "data-testid": "ArrowBackIosNewIcon",
                              "fontSize": "small",
                              "inheritViewBox": false,
                              "instanceFontSize": "small",
                              "style": Object {
                                "color": "grey",
                              },
                              "viewBox": "0 0 24 24",
                            }
                          }
                          style={
                            Object {
                              "color": "grey",
                            }
                          }
                          viewBox="0 0 24 24"
                        >
                          <Insertion
                            cache={
                              Object {
                                "insert": [Function],
                                "inserted": Object {
                                  "ptiqhd-MuiSvgIcon-root": true,
                                },
                                "key": "css",
                                "nonce": undefined,
                                "registered": Object {},
                                "sheet": StyleSheet {
                                  "_alreadyInsertedOrderInsensitiveRule": true,
                                  "_insertTag": [Function],
                                  "before": null,
                                  "container": <head>
                                    <style
                                      data-emotion="css"
                                      data-s=""
                                    >
                                      
                                      .css-ptiqhd-MuiSvgIcon-root{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:1em;height:1em;display:inline-block;fill:currentColor;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;-webkit-transition:fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;transition:fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;font-size:1.25rem;}
                                    </style>
                                  </head>,
                                  "ctr": 1,
                                  "insertionPoint": undefined,
                                  "isSpeedy": false,
                                  "key": "css",
                                  "nonce": undefined,
                                  "prepend": undefined,
                                  "tags": Array [
                                    <style
                                      data-emotion="css"
                                      data-s=""
                                    >
                                      
                                      .css-ptiqhd-MuiSvgIcon-root{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:1em;height:1em;display:inline-block;fill:currentColor;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;-webkit-transition:fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;transition:fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;font-size:1.25rem;}
                                    </style>,
                                  ],
                                },
                              }
                            }
                            isStringTag={true}
                            serialized={
                              Object {
                                "map": undefined,
                                "name": "ptiqhd-MuiSvgIcon-root",
                                "next": undefined,
                                "styles": "label:MuiSvgIcon-root;user-select:none;width:1em;height:1em;display:inline-block;fill:currentColor;flex-shrink:0;transition:fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;font-size:1.25rem;",
                                "toString": [Function],
                              }
                            }
                          />
                          <svg
                            aria-hidden={true}
                            className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall css-ptiqhd-MuiSvgIcon-root"
                            data-testid="ArrowBackIosNewIcon"
                            focusable="false"
                            style={
                              Object {
                                "color": "grey",
                              }
                            }
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M17.77 3.77 16 2 6 12l10 10 1.77-1.77L9.54 12z"
                            />
                          </svg>
                        </MuiSvgIconRoot>
                      </ForwardRef(SvgIcon)>
                    </ForwardRef(ArrowBackIosNewIcon)>
                    <Link
                      to="/shopping"
                    >
                      <a
                        href="/shopping"
                        onClick={[Function]}
                      >
                        Continue Shopping
                      </a>
                    </Link>
                  </div>
                </div>
                <Suspense
                  fallback={
                    <p>
                      Loading...
                    </p>
                  }
                >
                  <p>
                    Loading...
                  </p>
                </Suspense>
              </main>
            </CartWrapper>
          </Routes>
        </Suspense>
      </Router>
    </BrowserRouter>
  </Provider>
</App>
`;
